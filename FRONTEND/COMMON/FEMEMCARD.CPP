#include "NFS4.H"
#include "FEMEMCARD.H"

// decompiled code
// original method signature: 
// void /*$ra*/ ChecksumData__FP12tMemCardData(struct tMemCardData *memCardData /*$s0*/)
 // line 63, offset 0x800342a0
	/* begin block 1 */
		// Start line: 64
		// Start offset: 0x800342A0
	/* end block 1 */
	// End offset: 0x800342A0
	// End Line: 64

/* WARNING: Control flow encountered bad instruction data */

void ChecksumData__FP12tMemCardData(tMemCardData *memCardData)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// void * /*$ra*/ VerifySuccessfulRead__FP12tMemCardData(struct tMemCardData *memCardData /*$s1*/)
 // line 75, offset 0x80034318
	/* begin block 1 */
		// Start line: 76
		// Start offset: 0x80034318
		// Variables:
	// 		void * result; // $s0
	/* end block 1 */
	// End offset: 0x800343D8
	// End Line: 87

/* WARNING: Control flow encountered bad instruction data */

void * VerifySuccessfulRead__FP12tMemCardData(tMemCardData *memCardData)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// void /*$ra*/ MakeWayForMemoryCard__Fv()
 // line 90, offset 0x800343f0
	/* begin block 1 */
		// Start line: 91
		// Start offset: 0x800343F0
	/* end block 1 */
	// End offset: 0x800343F0
	// End Line: 91

/* WARNING: Control flow encountered bad instruction data */
/* WARNING: Unknown calling convention yet parameter storage is locked */

void MakeWayForMemoryCard__Fv(void)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// void /*$ra*/ BringThatBeatBack__Fv()
 // line 108, offset 0x80034414
	/* begin block 1 */
		// Start line: 109
		// Start offset: 0x80034414
	/* end block 1 */
	// End offset: 0x80034414
	// End Line: 109

/* WARNING: Control flow encountered bad instruction data */
/* WARNING: Unknown calling convention yet parameter storage is locked */

void BringThatBeatBack__Fv(void)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// int /*$ra*/ Confirm__Fii(int Text /*$s2*/, int yesText /*$s4*/)
 // line 124, offset 0x80034438
	/* begin block 1 */
		// Start line: 125
		// Start offset: 0x80034438
		// Variables:
	// 		struct tDialogYesNoMem MyDialog; // stack offset -192
	// 		void * putbackon; // $s3
	// 		int ret; // $s2

		/* begin block 1.1 */
			// Start line: 125
			// Start offset: 0x80034438
			// Variables:
		// 		struct tDialogYesNoMem *this; // $s0
		/* end block 1.1 */
		// End offset: 0x80034438
		// End Line: 125

		/* begin block 1.2 */
			// Start line: 125
			// Start offset: 0x80034438

			/* begin block 1.2.1 */
				// Start line: 125
				// Start offset: 0x80034438
				// Variables:
			// 		struct tDialogBase *this; // $a0

				/* begin block 1.2.1.1 */
					// Start line: 125
					// Start offset: 0x80034438
				/* end block 1.2.1.1 */
				// End offset: 0x80034438
				// End Line: 125
			/* end block 1.2.1 */
			// End offset: 0x80034438
			// End Line: 125
		/* end block 1.2 */
		// End offset: 0x8003449C
		// End Line: 133

		/* begin block 1.3 */
			// Start line: 133
			// Start offset: 0x8003449C
			// Variables:
		// 		int num; // $s2

			/* begin block 1.3.1 */
				// Start line: 133
				// Start offset: 0x8003449C
			/* end block 1.3.1 */
			// End offset: 0x8003449C
			// End Line: 133
		/* end block 1.3 */
		// End offset: 0x8003449C
		// End Line: 133

		/* begin block 1.4 */
			// Start line: 133
			// Start offset: 0x8003449C
			// Variables:
		// 		int yes; // $s4

			/* begin block 1.4.1 */
				// Start line: 133
				// Start offset: 0x8003449C
			/* end block 1.4.1 */
			// End offset: 0x8003449C
			// End Line: 133
		/* end block 1.4 */
		// End offset: 0x8003449C
		// End Line: 133

		/* begin block 1.5 */
			// Start line: 133
			// Start offset: 0x8003449C

			/* begin block 1.5.1 */
				// Start line: 139
				// Start offset: 0x800344CC

				/* begin block 1.5.1.1 */
					// Start line: 139
					// Start offset: 0x800344CC

					/* begin block 1.5.1.1.1 */
						// Start line: 139
						// Start offset: 0x800344CC
					/* end block 1.5.1.1.1 */
					// End offset: 0x800344D4
					// End Line: 139
				/* end block 1.5.1.1 */
				// End offset: 0x800344D4
				// End Line: 139
			/* end block 1.5.1 */
			// End offset: 0x800344D4
			// End Line: 139
		/* end block 1.5 */
		// End offset: 0x800344D4
		// End Line: 139

		/* begin block 1.6 */
			// Start line: 140
			// Start offset: 0x800344D4

			/* begin block 1.6.1 */
				// Start line: 143
				// Start offset: 0x800344F0

				/* begin block 1.6.1.1 */
					// Start line: 143
					// Start offset: 0x800344F0
					// Variables:
				// 		struct tDialogMessageString *this; // $s0

					/* begin block 1.6.1.1.1 */
						// Start line: 143
						// Start offset: 0x800344F0
					/* end block 1.6.1.1.1 */
					// End offset: 0x800344F0
					// End Line: 143
				/* end block 1.6.1.1 */
				// End offset: 0x800344F0
				// End Line: 143

				/* begin block 1.6.1.2 */
					// Start line: 146
					// Start offset: 0x80034514

					/* begin block 1.6.1.2.1 */
						// Start line: 146
						// Start offset: 0x80034514

						/* begin block 1.6.1.2.1.1 */
							// Start line: 146
							// Start offset: 0x80034514
						/* end block 1.6.1.2.1.1 */
						// End offset: 0x80034514
						// End Line: 146
					/* end block 1.6.1.2.1 */
					// End offset: 0x80034514
					// End Line: 146
				/* end block 1.6.1.2 */
				// End offset: 0x80034530
				// End Line: 147
			/* end block 1.6.1 */
			// End offset: 0x80034540
			// End Line: 148

			/* begin block 1.6.2 */
				// Start line: 152
				// Start offset: 0x80034550

				/* begin block 1.6.2.1 */
					// Start line: 152
					// Start offset: 0x80034550

					/* begin block 1.6.2.1.1 */
						// Start line: 156
						// Start offset: 0x80034564

						/* begin block 1.6.2.1.1.1 */
							// Start line: 156
							// Start offset: 0x80034564

							/* begin block 1.6.2.1.1.1.1 */
								// Start line: 157
								// Start offset: 0x8003456C

								/* begin block 1.6.2.1.1.1.1.1 */
									// Start line: 159
									// Start offset: 0x80034578

									/* begin block 1.6.2.1.1.1.1.1.1 */
										// Start line: 159
										// Start offset: 0x80034578

										/* begin block 1.6.2.1.1.1.1.1.1.1 */
											// Start line: 159
											// Start offset: 0x80034578
										/* end block 1.6.2.1.1.1.1.1.1.1 */
										// End offset: 0x80034578
										// End Line: 159
									/* end block 1.6.2.1.1.1.1.1.1 */
									// End offset: 0x80034578
									// End Line: 159
								/* end block 1.6.2.1.1.1.1.1 */
								// End offset: 0x80034594
								// End Line: 160
							/* end block 1.6.2.1.1.1.1 */
							// End offset: 0x800345A4
							// End Line: 160
						/* end block 1.6.2.1.1.1 */
						// End offset: 0x800345A4
						// End Line: 160
					/* end block 1.6.2.1.1 */
					// End offset: 0x800345A4
					// End Line: 160
				/* end block 1.6.2.1 */
				// End offset: 0x800345A4
				// End Line: 160
			/* end block 1.6.2 */
			// End offset: 0x800345A4
			// End Line: 160
		/* end block 1.6 */
		// End offset: 0x800345A4
		// End Line: 160

		/* begin block 1.7 */
			// Start line: 162
			// Start offset: 0x800345A4

			/* begin block 1.7.1 */
				// Start line: 162
				// Start offset: 0x800345A4

				/* begin block 1.7.1.1 */
					// Start line: 162
					// Start offset: 0x800345A4

					/* begin block 1.7.1.1.1 */
						// Start line: 162
						// Start offset: 0x800345A4

						/* begin block 1.7.1.1.1.1 */
							// Start line: 162
							// Start offset: 0x800345A4

							/* begin block 1.7.1.1.1.1.1 */
								// Start line: 162
								// Start offset: 0x800345A4
							/* end block 1.7.1.1.1.1.1 */
							// End offset: 0x800345A4
							// End Line: 162
						/* end block 1.7.1.1.1.1 */
						// End offset: 0x800345A4
						// End Line: 162
					/* end block 1.7.1.1.1 */
					// End offset: 0x800345A4
					// End Line: 162
				/* end block 1.7.1.1 */
				// End offset: 0x800345A4
				// End Line: 162
			/* end block 1.7.1 */
			// End offset: 0x800345A4
			// End Line: 162
		/* end block 1.7 */
		// End offset: 0x800345A4
		// End Line: 162
	/* end block 1 */
	// End offset: 0x800345A4
	// End Line: 162

/* WARNING: Control flow encountered bad instruction data */

int Confirm__Fii(int Text,int yesText)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// int /*$ra*/ OverwriteConfirm__Fv()
 // line 171, offset 0x800345ec
	/* begin block 1 */
		// Start line: 172
		// Start offset: 0x800345EC
	/* end block 1 */
	// End offset: 0x800345EC
	// End Line: 172

/* WARNING: Control flow encountered bad instruction data */
/* WARNING: Unknown calling convention yet parameter storage is locked */

int OverwriteConfirm__Fv(void)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// int /*$ra*/ OverwriteAlwaysYes__Fv()
 // line 184, offset 0x80034618
	/* begin block 1 */
		// Start line: 185
		// Start offset: 0x80034618
	/* end block 1 */
	// End offset: 0x80034618
	// End Line: 186

/* WARNING: Control flow encountered bad instruction data */
/* WARNING: Unknown calling convention yet parameter storage is locked */

int OverwriteAlwaysYes__Fv(void)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// int /*$ra*/ FormatConfirm__Fv()
 // line 191, offset 0x80034620
	/* begin block 1 */
		// Start line: 192
		// Start offset: 0x80034620
	/* end block 1 */
	// End offset: 0x80034620
	// End Line: 192

/* WARNING: Control flow encountered bad instruction data */
/* WARNING: Unknown calling convention yet parameter storage is locked */

int FormatConfirm__Fv(void)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// void /*$ra*/ LoadingProc__Fv()
 // line 209, offset 0x8003464c
	/* begin block 1 */
		// Start line: 210
		// Start offset: 0x8003464C
	/* end block 1 */
	// End offset: 0x8003464C
	// End Line: 210

/* WARNING: Control flow encountered bad instruction data */
/* WARNING: Unknown calling convention yet parameter storage is locked */

void LoadingProc__Fv(void)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// void /*$ra*/ LoadingRedrawProc__Fv()
 // line 217, offset 0x80034654
	/* begin block 1 */
		// Start line: 218
		// Start offset: 0x80034654
	/* end block 1 */
	// End offset: 0x80034654
	// End Line: 218

/* WARNING: Control flow encountered bad instruction data */
/* WARNING: Unknown calling convention yet parameter storage is locked */

void LoadingRedrawProc__Fv(void)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// void /*$ra*/ SavingProc__Fv()
 // line 226, offset 0x8003467c
	/* begin block 1 */
		// Start line: 227
		// Start offset: 0x8003467C
	/* end block 1 */
	// End offset: 0x8003467C
	// End Line: 227

/* WARNING: Control flow encountered bad instruction data */
/* WARNING: Unknown calling convention yet parameter storage is locked */

void SavingProc__Fv(void)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// void /*$ra*/ Init_Memcard__FbT0(void * redraw /*$s1*/, void * pinkslips /*$s0*/)
 // line 240, offset 0x800346a4
	/* begin block 1 */
		// Start line: 241
		// Start offset: 0x800346A4
		// Variables:
	// 		struct MCRDOPTS_def mcrdopts; // stack offset -56
	// 		int padrestorestarttick; // $v1

		/* begin block 1.1 */
			// Start line: 255
			// Start offset: 0x800346EC

			/* begin block 1.1.1 */
				// Start line: 255
				// Start offset: 0x800346EC
			/* end block 1.1.1 */
			// End offset: 0x800346EC
			// End Line: 255
		/* end block 1.1 */
		// End offset: 0x800346EC
		// End Line: 255

		/* begin block 1.2 */
			// Start line: 259
			// Start offset: 0x80034700

			/* begin block 1.2.1 */
				// Start line: 259
				// Start offset: 0x80034700

				/* begin block 1.2.1.1 */
					// Start line: 259
					// Start offset: 0x80034700
				/* end block 1.2.1.1 */
				// End offset: 0x80034700
				// End Line: 259
			/* end block 1.2.1 */
			// End offset: 0x80034700
			// End Line: 259
		/* end block 1.2 */
		// End offset: 0x80034718
		// End Line: 259
	/* end block 1 */
	// End offset: 0x800347EC
	// End Line: 312

/* WARNING: Control flow encountered bad instruction data */

void Init_Memcard__FbT0(void *redraw,void *pinkslips)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// void /*$ra*/ DeInit_Memcard__Fv()
 // line 321, offset 0x80034800
	/* begin block 1 */
		// Start line: 322
		// Start offset: 0x80034800
		// Variables:
	// 		int padrestorestarttick; // $a0

		/* begin block 1.1 */
			// Start line: 326
			// Start offset: 0x80034818

			/* begin block 1.1.1 */
				// Start line: 326
				// Start offset: 0x80034818
			/* end block 1.1.1 */
			// End offset: 0x80034818
			// End Line: 326
		/* end block 1.1 */
		// End offset: 0x80034818
		// End Line: 326

		/* begin block 1.2 */
			// Start line: 341
			// Start offset: 0x80034850

			/* begin block 1.2.1 */
				// Start line: 341
				// Start offset: 0x80034850

				/* begin block 1.2.1.1 */
					// Start line: 341
					// Start offset: 0x80034850
				/* end block 1.2.1.1 */
				// End offset: 0x80034850
				// End Line: 341
			/* end block 1.2.1 */
			// End offset: 0x80034850
			// End Line: 341
		/* end block 1.2 */
		// End offset: 0x80034868
		// End Line: 341
	/* end block 1 */
	// End offset: 0x80034890
	// End Line: 346

/* WARNING: Control flow encountered bad instruction data */
/* WARNING: Unknown calling convention yet parameter storage is locked */

void DeInit_Memcard__Fv(void)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// void /*$ra*/ Init_MemcardFile__FR12MCRDFILE_defsb(struct MCRDFILE_def *memCardFile /*$s2*/, short cardnum /*$a1*/, void * notitle /*$s0*/)
 // line 357, offset 0x800348a0
	/* begin block 1 */
		// Start line: 358
		// Start offset: 0x800348A0
	/* end block 1 */
	// End offset: 0x80034954
	// End Line: 379

/* WARNING: Control flow encountered bad instruction data */

void Init_MemcardFile__FR12MCRDFILE_defsb(MCRDFILE_def *memCardFile,short cardnum,void *notitle)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// void * /*$ra*/ SaveGame__Fs(short player /*$s5*/)
 // line 395, offset 0x80034988
	/* begin block 1 */
		// Start line: 396
		// Start offset: 0x80034988
		// Variables:
	// 		struct tMemCardData memCardData; // stack offset -5864
	// 		char memorycardbuffer[256]; // stack offset -568
	// 		struct tDialogNoInputMessage WarningDialog; // stack offset -312
	// 		short cardNum; // stack offset -48
	// 		struct MCRDFILE_def memCardFile; // stack offset -160
	// 		char *shapeFile; // $s7
	// 		char shapeFileName[64]; // stack offset -112
	// 		void * finished; // $s3
	// 		int event; // $s0
	// 		void * returnvalue; // $s6
	// 		int returnmessage; // $s2

		/* begin block 1.1 */
			// Start line: 396
			// Start offset: 0x80034988
			// Variables:
		// 		int i; // $a2
		/* end block 1.1 */
		// End offset: 0x80034A24
		// End Line: 411

		/* begin block 1.2 */
			// Start line: 413
			// Start offset: 0x80034A24

			/* begin block 1.2.1 */
				// Start line: 413
				// Start offset: 0x80034A24

				/* begin block 1.2.1.1 */
					// Start line: 413
					// Start offset: 0x80034A24

					/* begin block 1.2.1.1.1 */
						// Start line: 413
						// Start offset: 0x80034A24
					/* end block 1.2.1.1.1 */
					// End offset: 0x80034A24
					// End Line: 413
				/* end block 1.2.1.1 */
				// End offset: 0x80034A24
				// End Line: 413

				/* begin block 1.2.1.2 */
					// Start line: 413
					// Start offset: 0x80034A24
				/* end block 1.2.1.2 */
				// End offset: 0x80034A24
				// End Line: 413
			/* end block 1.2.1 */
			// End offset: 0x80034A24
			// End Line: 413
		/* end block 1.2 */
		// End offset: 0x80034A24
		// End Line: 413

		/* begin block 1.3 */
			// Start line: 413
			// Start offset: 0x80034A24

			/* begin block 1.3.1 */
				// Start line: 413
				// Start offset: 0x80034A24
			/* end block 1.3.1 */
			// End offset: 0x80034A24
			// End Line: 413
		/* end block 1.3 */
		// End offset: 0x80034A24
		// End Line: 413

		/* begin block 1.4 */
			// Start line: 413
			// Start offset: 0x80034A24

			/* begin block 1.4.1 */
				// Start line: 413
				// Start offset: 0x80034A24
			/* end block 1.4.1 */
			// End offset: 0x80034A24
			// End Line: 413
		/* end block 1.4 */
		// End offset: 0x80034A24
		// End Line: 413

		/* begin block 1.5 */
			// Start line: 417
			// Start offset: 0x80034AD0

			/* begin block 1.5.1 */
				// Start line: 417
				// Start offset: 0x80034AD0

				/* begin block 1.5.1.1 */
					// Start line: 417
					// Start offset: 0x80034AD0
				/* end block 1.5.1.1 */
				// End offset: 0x80034AD0
				// End Line: 417
			/* end block 1.5.1 */
			// End offset: 0x80034AD0
			// End Line: 417
		/* end block 1.5 */
		// End offset: 0x80034AE4
		// End Line: 418

		/* begin block 1.6 */
			// Start line: 419
			// Start offset: 0x80034AF8

			/* begin block 1.6.1 */
				// Start line: 475
				// Start offset: 0x80034C3C

				/* begin block 1.6.1.1 */
					// Start line: 477
					// Start offset: 0x80034C44

					/* begin block 1.6.1.1.1 */
						// Start line: 482
						// Start offset: 0x80034C8C

						/* begin block 1.6.1.1.1.1 */
							// Start line: 484
							// Start offset: 0x80034C8C

							/* begin block 1.6.1.1.1.1.1 */
								// Start line: 484
								// Start offset: 0x80034C8C

								/* begin block 1.6.1.1.1.1.1.1 */
									// Start line: 484
									// Start offset: 0x80034C8C
								/* end block 1.6.1.1.1.1.1.1 */
								// End offset: 0x80034C8C
								// End Line: 484
							/* end block 1.6.1.1.1.1.1 */
							// End offset: 0x80034C8C
							// End Line: 484
						/* end block 1.6.1.1.1.1 */
						// End offset: 0x80034C9C
						// End Line: 489

						/* begin block 1.6.1.1.1.2 */
							// Start line: 489
							// Start offset: 0x80034C9C
						/* end block 1.6.1.1.1.2 */
						// End offset: 0x80034C9C
						// End Line: 489

						/* begin block 1.6.1.1.1.3 */
							// Start line: 502
							// Start offset: 0x80034CAC
						/* end block 1.6.1.1.1.3 */
						// End offset: 0x80034CAC
						// End Line: 502

						/* begin block 1.6.1.1.1.4 */
							// Start line: 538
							// Start offset: 0x80034CE4
						/* end block 1.6.1.1.1.4 */
						// End offset: 0x80034CE4
						// End Line: 538

						/* begin block 1.6.1.1.1.5 */
							// Start line: 538
							// Start offset: 0x80034CE4
						/* end block 1.6.1.1.1.5 */
						// End offset: 0x80034CE4
						// End Line: 538
					/* end block 1.6.1.1.1 */
					// End offset: 0x80034CE4
					// End Line: 538
				/* end block 1.6.1.1 */
				// End offset: 0x80034CE4
				// End Line: 538
			/* end block 1.6.1 */
			// End offset: 0x80034CE4
			// End Line: 538
		/* end block 1.6 */
		// End offset: 0x80034D18
		// End Line: 557

		/* begin block 1.7 */
			// Start line: 557
			// Start offset: 0x80034D18

			/* begin block 1.7.1 */
				// Start line: 567
				// Start offset: 0x80034D3C

				/* begin block 1.7.1.1 */
					// Start line: 568
					// Start offset: 0x80034D3C
					// Variables:
				// 		struct tDialogMessageString *this; // $s0

					/* begin block 1.7.1.1.1 */
						// Start line: 568
						// Start offset: 0x80034D3C
					/* end block 1.7.1.1.1 */
					// End offset: 0x80034D3C
					// End Line: 568
				/* end block 1.7.1.1 */
				// End offset: 0x80034D3C
				// End Line: 568

				/* begin block 1.7.1.2 */
					// Start line: 571
					// Start offset: 0x80034D70

					/* begin block 1.7.1.2.1 */
						// Start line: 571
						// Start offset: 0x80034D70

						/* begin block 1.7.1.2.1.1 */
							// Start line: 571
							// Start offset: 0x80034D70
						/* end block 1.7.1.2.1.1 */
						// End offset: 0x80034D70
						// End Line: 571
					/* end block 1.7.1.2.1 */
					// End offset: 0x80034D70
					// End Line: 571
				/* end block 1.7.1.2 */
				// End offset: 0x80034D8C
				// End Line: 572
			/* end block 1.7.1 */
			// End offset: 0x80034DA4
			// End Line: 573
		/* end block 1.7 */
		// End offset: 0x80034DA4
		// End Line: 573

		/* begin block 1.8 */
			// Start line: 577
			// Start offset: 0x80034DA4

			/* begin block 1.8.1 */
				// Start line: 577
				// Start offset: 0x80034DA4

				/* begin block 1.8.1.1 */
					// Start line: 577
					// Start offset: 0x80034DA4

					/* begin block 1.8.1.1.1 */
						// Start line: 577
						// Start offset: 0x80034DA4
					/* end block 1.8.1.1.1 */
					// End offset: 0x80034DA4
					// End Line: 577
				/* end block 1.8.1.1 */
				// End offset: 0x80034DA4
				// End Line: 577
			/* end block 1.8.1 */
			// End offset: 0x80034DA4
			// End Line: 577
		/* end block 1.8 */
		// End offset: 0x80034DA4
		// End Line: 577
	/* end block 1 */
	// End offset: 0x80034DA4
	// End Line: 579

/* WARNING: Control flow encountered bad instruction data */

void * SaveGame__Fs(short player)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// short /*$ra*/ LoadGame__FsbT1(short player /*stack -56*/, void * PinkSlips /*stack 4*/, void * WithDialogs /*stack 8*/)
 // line 591, offset 0x80034e18
	/* begin block 1 */
		// Start line: 592
		// Start offset: 0x80034E18
		// Variables:
	// 		struct tMemCardData memCardData; // stack offset -5808
	// 		char memorycardbuffer[256]; // stack offset -512
	// 		short cardNum; // $s3
	// 		struct tDialogNoInputMessage WarningDialog; // stack offset -256
	// 		struct MCRDFILE_def memCardFile; // stack offset -104
	// 		void * finished; // $s1
	// 		int result; // $s4
	// 		int memCardResult; // $s0
	// 		int count; // $fp
	// 		int returnmessage; // $s2

		/* begin block 1.1 */
			// Start line: 592
			// Start offset: 0x80034E18

			/* begin block 1.1.1 */
				// Start line: 592
				// Start offset: 0x80034E18

				/* begin block 1.1.1.1 */
					// Start line: 592
					// Start offset: 0x80034E18

					/* begin block 1.1.1.1.1 */
						// Start line: 592
						// Start offset: 0x80034E18
					/* end block 1.1.1.1.1 */
					// End offset: 0x80034E18
					// End Line: 592
				/* end block 1.1.1.1 */
				// End offset: 0x80034E18
				// End Line: 592

				/* begin block 1.1.1.2 */
					// Start line: 592
					// Start offset: 0x80034E18
				/* end block 1.1.1.2 */
				// End offset: 0x80034E18
				// End Line: 592
			/* end block 1.1.1 */
			// End offset: 0x80034E18
			// End Line: 592
		/* end block 1.1 */
		// End offset: 0x80034E18
		// End Line: 592

		/* begin block 1.2 */
			// Start line: 592
			// Start offset: 0x80034E18

			/* begin block 1.2.1 */
				// Start line: 607
				// Start offset: 0x80034F10

				/* begin block 1.2.1.1 */
					// Start line: 607
					// Start offset: 0x80034F10

					/* begin block 1.2.1.1.1 */
						// Start line: 607
						// Start offset: 0x80034F10
					/* end block 1.2.1.1.1 */
					// End offset: 0x80034F10
					// End Line: 607
				/* end block 1.2.1.1 */
				// End offset: 0x80034F10
				// End Line: 607

				/* begin block 1.2.1.2 */
					// Start line: 607
					// Start offset: 0x80034F10

					/* begin block 1.2.1.2.1 */
						// Start line: 611
						// Start offset: 0x80034F28

						/* begin block 1.2.1.2.1.1 */
							// Start line: 611
							// Start offset: 0x80034F28

							/* begin block 1.2.1.2.1.1.1 */
								// Start line: 611
								// Start offset: 0x80034F28
							/* end block 1.2.1.2.1.1.1 */
							// End offset: 0x80034F34
							// End Line: 611
						/* end block 1.2.1.2.1.1 */
						// End offset: 0x80034F34
						// End Line: 611
					/* end block 1.2.1.2.1 */
					// End offset: 0x80034F34
					// End Line: 611
				/* end block 1.2.1.2 */
				// End offset: 0x80034F34
				// End Line: 611

				/* begin block 1.2.1.3 */
					// Start line: 614
					// Start offset: 0x80034F40

					/* begin block 1.2.1.3.1 */
						// Start line: 614
						// Start offset: 0x80034F40

						/* begin block 1.2.1.3.1.1 */
							// Start line: 614
							// Start offset: 0x80034F40
						/* end block 1.2.1.3.1.1 */
						// End offset: 0x80034F40
						// End Line: 614
					/* end block 1.2.1.3.1 */
					// End offset: 0x80034F40
					// End Line: 614
				/* end block 1.2.1.3 */
				// End offset: 0x80034F54
				// End Line: 615
			/* end block 1.2.1 */
			// End offset: 0x80034F74
			// End Line: 616
		/* end block 1.2 */
		// End offset: 0x80034F74
		// End Line: 616

		/* begin block 1.3 */
			// Start line: 628
			// Start offset: 0x80034FA8

			/* begin block 1.3.1 */
				// Start line: 644
				// Start offset: 0x8003500C

				/* begin block 1.3.1.1 */
					// Start line: 646
					// Start offset: 0x80035014

					/* begin block 1.3.1.1.1 */
						// Start line: 653
						// Start offset: 0x8003505C
						// Variables:
					// 		struct CARDINFO_def *pCI; // $s0

						/* begin block 1.3.1.1.1.1 */
							// Start line: 658
							// Start offset: 0x8003505C
						/* end block 1.3.1.1.1.1 */
						// End offset: 0x8003505C
						// End Line: 658

						/* begin block 1.3.1.1.1.2 */
							// Start line: 662
							// Start offset: 0x80035074

							/* begin block 1.3.1.1.1.2.1 */
								// Start line: 698
								// Start offset: 0x80035174

								/* begin block 1.3.1.1.1.2.1.1 */
									// Start line: 699
									// Start offset: 0x80035174

									/* begin block 1.3.1.1.1.2.1.1.1 */
										// Start line: 701
										// Start offset: 0x80035198

										/* begin block 1.3.1.1.1.2.1.1.1.1 */
											// Start line: 702
											// Start offset: 0x80035198
											// Variables:
										// 		struct tDialogMessageString *this; // $s0

											/* begin block 1.3.1.1.1.2.1.1.1.1.1 */
												// Start line: 702
												// Start offset: 0x80035198
											/* end block 1.3.1.1.1.2.1.1.1.1.1 */
											// End offset: 0x80035198
											// End Line: 702
										/* end block 1.3.1.1.1.2.1.1.1.1 */
										// End offset: 0x80035198
										// End Line: 702
									/* end block 1.3.1.1.1.2.1.1.1 */
									// End offset: 0x800351D4
									// End Line: 705
								/* end block 1.3.1.1.1.2.1.1 */
								// End offset: 0x800351D4
								// End Line: 705
							/* end block 1.3.1.1.1.2.1 */
							// End offset: 0x800351D4
							// End Line: 705
						/* end block 1.3.1.1.1.2 */
						// End offset: 0x800351D4
						// End Line: 705

						/* begin block 1.3.1.1.1.3 */
							// Start line: 711
							// Start offset: 0x800351D4
						/* end block 1.3.1.1.1.3 */
						// End offset: 0x800351D4
						// End Line: 711

						/* begin block 1.3.1.1.1.4 */
							// Start line: 754
							// Start offset: 0x80035230
						/* end block 1.3.1.1.1.4 */
						// End offset: 0x80035230
						// End Line: 754
					/* end block 1.3.1.1.1 */
					// End offset: 0x80035230
					// End Line: 754
				/* end block 1.3.1.1 */
				// End offset: 0x80035230
				// End Line: 754
			/* end block 1.3.1 */
			// End offset: 0x80035230
			// End Line: 754
		/* end block 1.3 */
		// End offset: 0x80035258
		// End Line: 772

		/* begin block 1.4 */
			// Start line: 777
			// Start offset: 0x80035274

			/* begin block 1.4.1 */
				// Start line: 778
				// Start offset: 0x80035294

				/* begin block 1.4.1.1 */
					// Start line: 779
					// Start offset: 0x80035294
					// Variables:
				// 		struct tDialogMessageString *this; // $s0

					/* begin block 1.4.1.1.1 */
						// Start line: 779
						// Start offset: 0x80035294
					/* end block 1.4.1.1.1 */
					// End offset: 0x80035294
					// End Line: 779
				/* end block 1.4.1.1 */
				// End offset: 0x80035294
				// End Line: 779

				/* begin block 1.4.1.2 */
					// Start line: 783
					// Start offset: 0x800352DC

					/* begin block 1.4.1.2.1 */
						// Start line: 783
						// Start offset: 0x800352DC

						/* begin block 1.4.1.2.1.1 */
							// Start line: 783
							// Start offset: 0x800352DC
						/* end block 1.4.1.2.1.1 */
						// End offset: 0x800352DC
						// End Line: 783
					/* end block 1.4.1.2.1 */
					// End offset: 0x800352DC
					// End Line: 783
				/* end block 1.4.1.2 */
				// End offset: 0x800352F8
				// End Line: 784
			/* end block 1.4.1 */
			// End offset: 0x80035310
			// End Line: 785
		/* end block 1.4 */
		// End offset: 0x80035310
		// End Line: 785

		/* begin block 1.5 */
			// Start line: 811
			// Start offset: 0x800353A8

			/* begin block 1.5.1 */
				// Start line: 811
				// Start offset: 0x800353A8

				/* begin block 1.5.1.1 */
					// Start line: 811
					// Start offset: 0x800353A8

					/* begin block 1.5.1.1.1 */
						// Start line: 811
						// Start offset: 0x800353A8
					/* end block 1.5.1.1.1 */
					// End offset: 0x800353A8
					// End Line: 811
				/* end block 1.5.1.1 */
				// End offset: 0x800353A8
				// End Line: 811
			/* end block 1.5.1 */
			// End offset: 0x800353A8
			// End Line: 811
		/* end block 1.5 */
		// End offset: 0x800353A8
		// End Line: 811
	/* end block 1 */
	// End offset: 0x800353A8
	// End Line: 811

/* WARNING: Control flow encountered bad instruction data */

short LoadGame__FsbT1(short player,void *PinkSlips,void *WithDialogs)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// enum PinkSlipsErrorCode /*$ra*/ SavePinkSlipsCars__Fss(short player /*$fp*/, short withoutCarInGarageNumber /*stack -56*/)
 // line 818, offset 0x800353f0
	/* begin block 1 */
		// Start line: 819
		// Start offset: 0x800353F0
		// Variables:
	// 		struct tMemCardData memCardData; // stack offset -5720
	// 		char memorycardbuffer[256]; // stack offset -424
	// 		char *shapeFile; // $s7
	// 		char shapeFileName[64]; // stack offset -168
	// 		short cardNum; // stack offset -48
	// 		struct MCRDFILE_def memCardFile; // stack offset -104
	// 		void * finished; // $s3
	// 		void * finishedsave; // $s5
	// 		enum PinkSlipsErrorCode result; // $s2
	// 		int memCardResult; // $s0
	// 		int event; // $s0

		/* begin block 1.1 */
			// Start line: 862
			// Start offset: 0x800354E8

			/* begin block 1.1.1 */
				// Start line: 864
				// Start offset: 0x800354F0

				/* begin block 1.1.1.1 */
					// Start line: 868
					// Start offset: 0x80035538

					/* begin block 1.1.1.1.1 */
						// Start line: 877
						// Start offset: 0x80035550

						/* begin block 1.1.1.1.1.1 */
							// Start line: 878
							// Start offset: 0x80035560

							/* begin block 1.1.1.1.1.1.1 */
								// Start line: 931
								// Start offset: 0x80035600

								/* begin block 1.1.1.1.1.1.1.1 */
									// Start line: 933
									// Start offset: 0x80035608

									/* begin block 1.1.1.1.1.1.1.1.1 */
										// Start line: 938
										// Start offset: 0x80035648

										/* begin block 1.1.1.1.1.1.1.1.1.1 */
											// Start line: 940
											// Start offset: 0x80035648

											/* begin block 1.1.1.1.1.1.1.1.1.1.1 */
												// Start line: 940
												// Start offset: 0x80035648

												/* begin block 1.1.1.1.1.1.1.1.1.1.1.1 */
													// Start line: 940
													// Start offset: 0x80035648
												/* end block 1.1.1.1.1.1.1.1.1.1.1.1 */
												// End offset: 0x80035648
												// End Line: 940
											/* end block 1.1.1.1.1.1.1.1.1.1.1 */
											// End offset: 0x80035648
											// End Line: 940
										/* end block 1.1.1.1.1.1.1.1.1.1 */
										// End offset: 0x80035658
										// End Line: 945

										/* begin block 1.1.1.1.1.1.1.1.1.2 */
											// Start line: 971
											// Start offset: 0x80035674
										/* end block 1.1.1.1.1.1.1.1.1.2 */
										// End offset: 0x800356B0
										// End Line: 986
									/* end block 1.1.1.1.1.1.1.1.1 */
									// End offset: 0x800356B0
									// End Line: 989
								/* end block 1.1.1.1.1.1.1.1 */
								// End offset: 0x800356B0
								// End Line: 989
							/* end block 1.1.1.1.1.1.1 */
							// End offset: 0x800356B0
							// End Line: 989
						/* end block 1.1.1.1.1.1 */
						// End offset: 0x800356B8
						// End Line: 996
					/* end block 1.1.1.1.1 */
					// End offset: 0x800356B8
					// End Line: 1008

					/* begin block 1.1.1.1.2 */
						// Start line: 1016
						// Start offset: 0x800356C0
					/* end block 1.1.1.1.2 */
					// End offset: 0x800356F4
					// End Line: 1032
				/* end block 1.1.1.1 */
				// End offset: 0x800356F4
				// End Line: 1042
			/* end block 1.1.1 */
			// End offset: 0x800356F4
			// End Line: 1042
		/* end block 1.1 */
		// End offset: 0x800356F4
		// End Line: 1042
	/* end block 1 */
	// End offset: 0x8003572C
	// End Line: 1062

/* WARNING: Control flow encountered bad instruction data */

PinkSlipsErrorCode SavePinkSlipsCars__Fss(short player,short withoutCarInGarageNumber)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}



// decompiled code
// original method signature: 
// enum PinkSlipsErrorCode /*$ra*/ SavePinkSlipsCarsWithErrorDialogs__Fsss(short player /*$a0*/, short WillLoseCar /*$fp*/, short withoutCarInGarageNumber /*$a2*/)
 // line 1090, offset 0x80035778
	/* begin block 1 */
		// Start line: 1091
		// Start offset: 0x80035778
		// Variables:
	// 		struct tDialogYesNo RetryCancelDialog; // stack offset -1520
	// 		struct tDialogNoInputMessage WillLoseCarMessage; // stack offset -1352
	// 		char string[500]; // stack offset -1200
	// 		char string2[500]; // stack offset -696
	// 		enum PinkSlipsErrorCode err; // $s2
	// 		int retry; // $s6

		/* begin block 1.1 */
			// Start line: 1091
			// Start offset: 0x80035778

			/* begin block 1.1.1 */
				// Start line: 1091
				// Start offset: 0x80035778

				/* begin block 1.1.1.1 */
					// Start line: 1091
					// Start offset: 0x80035778

					/* begin block 1.1.1.1.1 */
						// Start line: 1091
						// Start offset: 0x80035778
					/* end block 1.1.1.1.1 */
					// End offset: 0x80035778
					// End Line: 1091
				/* end block 1.1.1.1 */
				// End offset: 0x80035778
				// End Line: 1091

				/* begin block 1.1.1.2 */
					// Start line: 1091
					// Start offset: 0x80035778
				/* end block 1.1.1.2 */
				// End offset: 0x80035778
				// End Line: 1091
			/* end block 1.1.1 */
			// End offset: 0x80035778
			// End Line: 1091
		/* end block 1.1 */
		// End offset: 0x80035778
		// End Line: 1091

		/* begin block 1.2 */
			// Start line: 1091
			// Start offset: 0x80035778
			// Variables:
		// 		struct tDialogYesNo *this; // $v1

			/* begin block 1.2.1 */
				// Start line: 1091
				// Start offset: 0x80035778
			/* end block 1.2.1 */
			// End offset: 0x80035778
			// End Line: 1091
		/* end block 1.2 */
		// End offset: 0x80035778
		// End Line: 1091

		/* begin block 1.3 */
			// Start line: 1091
			// Start offset: 0x80035778

			/* begin block 1.3.1 */
				// Start line: 1091
				// Start offset: 0x80035778
			/* end block 1.3.1 */
			// End offset: 0x80035778
			// End Line: 1091
		/* end block 1.3 */
		// End offset: 0x80035778
		// End Line: 1091

		/* begin block 1.4 */
			// Start line: 1107
			// Start offset: 0x80035870
			// Variables:
		// 		int count; // $s0
		// 		struct tDialogNoInputMessage WarningDialog; // stack offset -192

			/* begin block 1.4.1 */
				// Start line: 1110
				// Start offset: 0x8003587C

				/* begin block 1.4.1.1 */
					// Start line: 1110
					// Start offset: 0x8003587C

					/* begin block 1.4.1.1.1 */
						// Start line: 1110
						// Start offset: 0x8003587C
					/* end block 1.4.1.1.1 */
					// End offset: 0x8003587C
					// End Line: 1110
				/* end block 1.4.1.1 */
				// End offset: 0x8003587C
				// End Line: 1110
			/* end block 1.4.1 */
			// End offset: 0x80035898
			// End Line: 1111

			/* begin block 1.4.2 */
				// Start line: 1112
				// Start offset: 0x800358A8

				/* begin block 1.4.2.1 */
					// Start line: 1112
					// Start offset: 0x800358A8

					/* begin block 1.4.2.1.1 */
						// Start line: 1112
						// Start offset: 0x800358A8

						/* begin block 1.4.2.1.1.1 */
							// Start line: 1112
							// Start offset: 0x800358A8
						/* end block 1.4.2.1.1.1 */
						// End offset: 0x800358A8
						// End Line: 1112
					/* end block 1.4.2.1.1 */
					// End offset: 0x800358A8
					// End Line: 1112

					/* begin block 1.4.2.1.2 */
						// Start line: 1112
						// Start offset: 0x800358A8
					/* end block 1.4.2.1.2 */
					// End offset: 0x800358A8
					// End Line: 1112
				/* end block 1.4.2.1 */
				// End offset: 0x800358A8
				// End Line: 1112
			/* end block 1.4.2 */
			// End offset: 0x800358A8
			// End Line: 1112

			/* begin block 1.4.3 */
				// Start line: 1112
				// Start offset: 0x800358A8

				/* begin block 1.4.3.1 */
					// Start line: 1112
					// Start offset: 0x800358A8
				/* end block 1.4.3.1 */
				// End offset: 0x800358A8
				// End Line: 1112
			/* end block 1.4.3 */
			// End offset: 0x800358A8
			// End Line: 1112

			/* begin block 1.4.4 */
				// Start line: 1112
				// Start offset: 0x800358A8

				/* begin block 1.4.4.1 */
					// Start line: 1112
					// Start offset: 0x800358A8
				/* end block 1.4.4.1 */
				// End offset: 0x800358A8
				// End Line: 1112
			/* end block 1.4.4 */
			// End offset: 0x800358A8
			// End Line: 1112

			/* begin block 1.4.5 */
				// Start line: 1120
				// Start offset: 0x8003594C

				/* begin block 1.4.5.1 */
					// Start line: 1120
					// Start offset: 0x8003594C

					/* begin block 1.4.5.1.1 */
						// Start line: 1120
						// Start offset: 0x8003594C
					/* end block 1.4.5.1.1 */
					// End offset: 0x8003594C
					// End Line: 1120
				/* end block 1.4.5.1 */
				// End offset: 0x8003594C
				// End Line: 1120
			/* end block 1.4.5 */
			// End offset: 0x80035960
			// End Line: 1121

			/* begin block 1.4.6 */
				// Start line: 1136
				// Start offset: 0x800359B4

				/* begin block 1.4.6.1 */
					// Start line: 1141
					// Start offset: 0x800359D0

					/* begin block 1.4.6.1.1 */
						// Start line: 1142
						// Start offset: 0x800359D0

						/* begin block 1.4.6.1.1.1 */
							// Start line: 1147
							// Start offset: 0x80035A14

							/* begin block 1.4.6.1.1.1.1 */
								// Start line: 1148
								// Start offset: 0x80035A20

								/* begin block 1.4.6.1.1.1.1.1 */
									// Start line: 1148
									// Start offset: 0x80035A20
								/* end block 1.4.6.1.1.1.1.1 */
								// End offset: 0x80035A20
								// End Line: 1148
							/* end block 1.4.6.1.1.1.1 */
							// End offset: 0x80035A20
							// End Line: 1148

							/* begin block 1.4.6.1.1.1.2 */
								// Start line: 1148
								// Start offset: 0x80035A20

								/* begin block 1.4.6.1.1.1.2.1 */
									// Start line: 1148
									// Start offset: 0x80035A20
								/* end block 1.4.6.1.1.1.2.1 */
								// End offset: 0x80035A20
								// End Line: 1148
							/* end block 1.4.6.1.1.1.2 */
							// End offset: 0x80035A20
							// End Line: 1148
						/* end block 1.4.6.1.1.1 */
						// End offset: 0x80035A60
						// End Line: 1151
					/* end block 1.4.6.1.1 */
					// End offset: 0x80035A60
					// End Line: 1151

					/* begin block 1.4.6.1.2 */
						// Start line: 1151
						// Start offset: 0x80035A60
						// Variables:
					// 		struct tDialogMessageString *this; // $a0

						/* begin block 1.4.6.1.2.1 */
							// Start line: 1151
							// Start offset: 0x80035A60
						/* end block 1.4.6.1.2.1 */
						// End offset: 0x80035A60
						// End Line: 1151
					/* end block 1.4.6.1.2 */
					// End offset: 0x80035A60
					// End Line: 1151
				/* end block 1.4.6.1 */
				// End offset: 0x80035A80
				// End Line: 1158
			/* end block 1.4.6 */
			// End offset: 0x80035A80
			// End Line: 1158

			/* begin block 1.4.7 */
				// Start line: 1091
				// Start offset: 0x80035A80

				/* begin block 1.4.7.1 */
					// Start line: 1091
					// Start offset: 0x80035A80

					/* begin block 1.4.7.1.1 */
						// Start line: 1091
						// Start offset: 0x80035A80
					/* end block 1.4.7.1.1 */
					// End offset: 0x80035A80
					// End Line: 1091
				/* end block 1.4.7.1 */
				// End offset: 0x80035A80
				// End Line: 1091
			/* end block 1.4.7 */
			// End offset: 0x80035A80
			// End Line: 1091
		/* end block 1.4 */
		// End offset: 0x80035A80
		// End Line: 1091

		/* begin block 1.5 */
			// Start line: 1163
			// Start offset: 0x80035A9C

			/* begin block 1.5.1 */
				// Start line: 1091
				// Start offset: 0x80035A9C

				/* begin block 1.5.1.1 */
					// Start line: 1091
					// Start offset: 0x80035A9C

					/* begin block 1.5.1.1.1 */
						// Start line: 1091
						// Start offset: 0x80035A9C
					/* end block 1.5.1.1.1 */
					// End offset: 0x80035A9C
					// End Line: 1091
				/* end block 1.5.1.1 */
				// End offset: 0x80035A9C
				// End Line: 1091
			/* end block 1.5.1 */
			// End offset: 0x80035A9C
			// End Line: 1091

			/* begin block 1.5.2 */
				// Start line: 1091
				// Start offset: 0x80035A9C

				/* begin block 1.5.2.1 */
					// Start line: 1091
					// Start offset: 0x80035A9C

					/* begin block 1.5.2.1.1 */
						// Start line: 1091
						// Start offset: 0x80035A9C

						/* begin block 1.5.2.1.1.1 */
							// Start line: 1091
							// Start offset: 0x80035A9C
						/* end block 1.5.2.1.1.1 */
						// End offset: 0x80035A9C
						// End Line: 1091
					/* end block 1.5.2.1.1 */
					// End offset: 0x80035A9C
					// End Line: 1091
				/* end block 1.5.2.1 */
				// End offset: 0x80035A9C
				// End Line: 1091
			/* end block 1.5.2 */
			// End offset: 0x80035A9C
			// End Line: 1091
		/* end block 1.5 */
		// End offset: 0x80035A9C
		// End Line: 1091
	/* end block 1 */
	// End offset: 0x80035A9C
	// End Line: 1091

/* WARNING: Control flow encountered bad instruction data */

PinkSlipsErrorCode
SavePinkSlipsCarsWithErrorDialogs__Fsss
          (short player,short WillLoseCar,short withoutCarInGarageNumber)

{
  undefined4 in_v1;
  undefined4 in_t5;
  
  special2(in_v1,in_t5,5,0x13);
                    /* WARNING: Bad instruction - Truncating control flow here */
  halt_baddata();
}




